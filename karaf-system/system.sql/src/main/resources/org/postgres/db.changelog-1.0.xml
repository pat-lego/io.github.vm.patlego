<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.8.xsd">

    <changeSet author="pat-lego" id="1.0">
        <sql dbms="postgresql" endDelimeter=";">
            CREATE SCHEMA patlegovm
        </sql>
        <createTable tableName="workflow_manager_wf" schemaName="patlegovm">
            <column name="workflow_id" type="VARCHAR">
                <constraints nullable="false" primaryKey="true" unique="true"/>
            </column>
            <column name="workflow_name" type="VARCHAR">
                <constraints nullable="true" primaryKey="false"/>
            </column>
            <column name="success" type="BOOLEAN">
                <constraints nullable="true" primaryKey="false"/>
            </column>
            <column name="start_time" type="TIMESTAMP">
                <constraints nullable="true" primaryKey="false"/>
            </column>
            <column name="end_time" type="TIMESTAMP">
                <constraints nullable="true" primaryKey="false"/>
            </column>
        </createTable>
        <createTable tableName="workflow_manager_wi" schemaName="patlegovm">
            <column name="workitem_name" type="VARCHAR">
                <constraints nullable="false" primaryKey="true" unique="false" primaryKeyName="PK_workItemId"/>
            </column>
            <column name="workflow_id" type="VARCHAR">
                <constraints nullable="false" primaryKey="true" unique="false" primaryKeyName="PK_workItemId" foreignKeyName="fk_workflow_wf_id" references="patlegovm.workflow_manager_wf(workflow_id)"/>
            </column>
            <column name="sequence_number" type="INT">
                <constraints nullable="true" primaryKey="false"/>
            </column>
            <column name="success" type="BOOLEAN">
                <constraints nullable="true" primaryKey="false"/>
            </column>
            <column name="workflow_name" type="VARCHAR">
                <constraints nullable="true" primaryKey="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet author="pat-lego" id="1.1">
        <createTable tableName="blogs" schemaName="patlegovm">
            <column name="blog_id" type="BIGINT" autoIncrement="true">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="blog_title" type="VARCHAR">
                <constraints nullable="true"/>
            </column>
            <column name="blog" type="CLOB">
                <constraints nullable="false"/>
            </column>
            <column name="blog_author" type="VARCHAR">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet author="pat-lego" id="1.2">
        <insert
            catalogName='karaf_db'
            dbms='postgresql'
            schemaName='patlegovm'
            tableName='blogs'>
            <column name='blog_title' value='Git Init' />
            <column name='blog'><![CDATA[<!-- <html> <head> <style> .prgrph { padding: 0.4rem; } </style> </head> <body> --> <div> <h2>Introduction</h2> <div class="prgrph"> Finally I made it! After so many months/years of thinking about having my own space I finally have one. The journey to create my own space from the ground up was quiet an experiment, from head bashing to late nights to just flat out googling technical issues in hopes that someone else experience the same issue. But I am hear now, in the<b><i>"cloud"</i></b>. </div> <div class="prgrph"> It's funny once I had the platform setup I told myself, I guess I need to write something now?? As weird as it was I was a little thrown off by the complexity of having to write something compared to getting a platform up and going. In some weird way I guess writing a blog requires more creative energy then solving a problem. Personally I think it's because the problem has a defined goal where as a blog is up to you. The goal is up to you to define it, and then stick with it. Maybe this is me telling myself that I have a hard time defining a goal and sticking with it. On the other hand I did set the goal of having my own full stack platform defined and here I am using it. Anyway enough about me trying to start this thing. </div> <h2>Why the blogs?</h2> <div class="prgrph"> As I gained maturity within my career and started understanding how system components worked I started to build systems at home trying to replicate what I would use at work. Eventually I gained confidence with my ability to configure and develop larger systems. I started talking to open source software communities understanding other existing systems and started to integrate those into my development practices. </div> <div class="prgrph"> One day I was on a call with a client trying to work though a software issue that they were and I realized that the issue that they were experiencing was a <b><i>bug</i></b >. <h3>What now?</h3> <h3>How can we get passed this?</h3> I knew that the answer was to log a ticket and get help from the product engineering team, but the issue with this is that it takes <b>weeks</b> to even <b>months</b>. For the client that I worked with this was expected I mean they are a huge company and long lasting processes are the norm. But for me I was not content with that answer. I mean not everyone has the financial capability to endure such long wait times. With that one day I started developing my own platform leveraging open source software and tools that I worked with throughout my career. <div> <b>With this I had a few goals</b> <ol> <li><b>document my experience building my own platform</b></li> <li> <b> on board small clients who want to have an online presence with little to no money</b> </li> </ol> </div> </div> <h2>Why though?</h2> <div class="prgrph"> You know, no one uses these words exactly but I will, holy shit <b>2020</b> was a fu**ed up year. Issues and thoughts that no one ever thought would have to be considered and solved had to be considered and solved. As software developer I was swamped with work, everyone trying to go digital yesterday. Here's my 2 cents on it, there's a lot of software to get people online but theres not a lot of help to get you there. I see ads and sales people preeching the vision and convincing people to jump on there software but I promise you they will not be there when it comes to roadblocks and issues with your online implementation. Now that we are in 2020 being online is the only way any business can survive. </div> <div class="prgrph"> I live in a small community, I hear about the struggles that vendors have to go through. I hope that maybe I can help one small business get online using my platform and allow there business to succeed. </div> <h2>Conclusion</h2> <div class="prgrph"> So that's that I am just some guy who runs a system from the cloud using open source software who one day hopes to help a small business kick start by hosting there website on the patform that I setup. I plan to integrate more features and functionality into my website and blog about how came to do it. Honestly though now that it is setup the hardest part is thinking about what to do next. That being said, I'll think of something. </div> <h3>Legault Out!</h3> </div> <!-- </body> </html> --> ]]></column>
            <column name='blog_author' value='Patrique' />
        </insert>
    </changeSet>

    <changeSet author="pat-lego" id="1.3">
        <createTable tableName="subscribe" schemaName="patlegovm">
            <column name="email" type="VARCHAR(255)">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="firstName" type="VARCHAR">
                <constraints nullable="true"/>
            </column>
            <column name="lastName" type="VARCHAR">
                <constraints nullable="true"/>
            </column>
        </createTable>
    </changeSet>
</databaseChangeLog>